app-id: dev.geovanejefferson.DataGuardian
runtime: org.gnome.Platform
runtime-version: "48"
sdk: org.gnome.Sdk
command: dataguardian.sh

finish-args:
  # GUI support
  - --socket=wayland
  - --socket=x11
  - --share=ipc
  - --device=dri

  # Access to backup targets and general network
  - --share=network

  # File access (host = full system; use with care)
  - --filesystem=host  # Needed for full backup access

  # Runtime socket (for daemon communication)
  - --filesystem=xdg-run/dataguardian:create  # Allow socket communication if used

  # Access to user bus and Flatpak APIs
  - --socket=session-bus
  - --talk-name=org.freedesktop.Flatpak

  # Required for some file chooser/storage access
  - --filesystem=xdg-run/flatpak
  - --filesystem=xdg-run/gvfsd

modules:
  - name: dataguardian
    buildsystem: simple
    sources:
      - type: git
        url: https://github.com/GeovaneJefferson/dataguardian.git
        branch: main

      # - type: dir
      #   path: . # Use local project directory

      - type: file
        path: dev.geovanejefferson.DataGuardian.appdata.xml

      - type: file
        path: data/icons/dev.geovanejefferson.DataGuardian.png

    build-commands:
      # App main data
      - mkdir -p /app/share/dataguardian
      - cp -r src /app/share/dataguardian
      - cp -r data /app/share/dataguardian
      - cp -r share /app/share/dataguardian

      # Desktop launcher
      - mkdir -p /app/share/applications
      - cp share/applications/dev.geovanejefferson.DataGuardian.desktop /app/share/applications/

      # App icon (modern and legacy)
      - mkdir -p /app/share/icons/hicolor/128x128/apps
      - cp data/icons/dev.geovanejefferson.DataGuardian.png /app/share/icons/hicolor/128x128/apps/
      - mkdir -p /app/share/icons/hicolor/48x48/apps
      - cp data/icons/dev.geovanejefferson.DataGuardian.png /app/share/icons/hicolor/48x48/apps/

      # AppStream metadata
      - mkdir -p /app/share/metainfo
      - cp dev.geovanejefferson.DataGuardian.metainfo.xml /app/share/metainfo/

      # Executable scripts
      - install -D -m755 dataguardian.sh /app/bin/dataguardian.sh
      - install -D -m755 stop-daemon.sh /app/bin/stop-daemon.sh

      # Runtime config storage (optional)
      - mkdir -p /app/share/dataguardian/config

      # Python dependencies
      - pip3 install --prefix=/app -r requirements.txt

    build-options:
      build-args:
        - --share=network

# Optional: Add this if stop-daemon.sh should clean something up at build time
# cleanup-commands:
#   - /app/bin/stop-daemon.sh || true
